# This workflow will build a Java project with Maven 
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

#ワークフロー名を「Java CI with Maven」に設定
name: Build and Push

#masterブランチへのpush時にこのワークフローを実行するよう指定
on:
  push:
    branches: 
      - 'main'
    tags:
      - 'v*'

#以下JOB
jobs:
  #ジョブ名(build)を設定
  ci:
    #ジョブの実行環境
    runs-on: ubuntu-latest

    #実行する処理やコマンドを指定
    steps:
    - uses: actions/checkout@v2 #リポジトリからのチェックアウトを行う「actions/checkout」アクションを実行する

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11.0.6'

    - name: Maven purge
      run: ./mvnw dependency:purge-local-repository -DreResolve=false -f ./pom.xml

    - name: Build and Test with Maven
      run: ./mvnw clean package -f ./pom.xml

    #Tagなどを作成するためのいろんなmetaデータを取得する
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: keropon48/apigateway

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        context: .
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Docker公式で用意されているモジュールがあったため使用。
    # これでやると疎結合にできないけど、面倒なのでこれで実装
    # 参考：https://github.com/marketplace/actions/docker-metadata-action
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        